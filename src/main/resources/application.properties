spring.application.name=ServerWebM

# Database Configuration

spring.datasource.url=jdbc:mysql://localhost:3306/cdweb
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# H2 Console Configuration
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA Configuration
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Server Configuration
server.port=8080

# Logging Configuration
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# application.properties
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
file.upload-dir=D:/upload/
#logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver=DEBUG
## SQL Initialization Configuration
#spring.sql.init.mode=always
#spring.sql.init.schema-locations=classpath:schema.sql
#spring.sql.init.data-locations=classpath:data.sql
#spring.sql.init.continue-on-error=true

# JWT Configuration
jwt.secret=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
jwt.expiration=86400000

## OAuth2 Configuration
#spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
#spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
#spring.security.oauth2.client.registration.google.scope=email,profile
#spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/api/auth/oauth2/callback/{registrationId}
